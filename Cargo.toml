[package]
name = "farcaster_node"
version = "0.2.0"
authors = ["Farcaster Devs", "Dr. Maxim Orlovsky <orlovsky@pandoracore.com>"]
build = "build.rs"
edition = "2018"
rust-version = "1.58.1"
exclude = [".github", "/test", "Dockerfile"]
keywords = ["bitcoin", "monero", "node", "atomic swaps"]
license = "MIT"
readme = "README.md"
description = "Farcaster node"

[lib]
name = "farcaster_node"

[[bin]]
name = "farcasterd"
required-features = ["server"]

[[bin]]
name = "peerd"
required-features = ["server"]

[[bin]]
name = "swapd"
required-features = ["server"]

[[bin]]
name = "swap-cli"
required-features = ["cli"]

[[bin]]
name = "walletd"
required-features = ["server"]

[[bin]]
name = "syncerd"
required-features = ["server"]

[[bin]]
name = "grpcd"
required-features = ["server"]

[dependencies]
anyhow = "1"
clap = { version = "3", optional = true, features = ["env", "derive"] }
hex = "0.4"
lazy_static = "1.4"
nix = { version = "0.19", optional = true }
rustc-hex = "2.1"
toml = { version = "0.5", optional = true }

# Farcaster crates
farcaster_core = { git = "https://github.com/farcaster-project/farcaster-core", branch = "main", features = ["serde"] }

# LNP/BP/Internet2 crates
amplify = "3"
amplify_derive = "2"
internet2 = "0.6"
lightning_encoding = "0.6"
lnp-core = "0.6"
lnpbp = { version = "0.6", features = ["all"] }
microservices = { version = "0.6", default-features = false, features = ['peer'] }
strict_encoding = "1.8"
strict_encoding_derive = "1.7"

# Coin clients
bitcoin = "0.28"
bitcoincore-rpc = "0.15"
electrum-client = "0.10"
monero = "0.16"
monero-lws = { git = "https://github.com/TheCharlatan/monero-lws-rs", branch = "main" }
monero-rpc = { git = "https://github.com/monero-ecosystem/monero-rpc-rs", branch = "master" }

# Congig & logging
colored = { version = "2", optional = true }
config = "0.11"
env_logger = "0.7"
log = { version = "0.4", features = ["max_level_trace", "release_max_level_debug"] }
settings = { version = "0.10", package = "config", optional = true }
shellexpand = { version = "2", optional = true }
configure_me = { version = "0.4", optional = true }

# Serialization & parsing
serde_crate = { package = "serde", version = "1", features = ["derive"], optional = true }
serde_json = { version = "1", optional = true }
serde_with = { version = "1.8", optional = true }
serde_yaml = { version = "0.8", optional = true }

# Async
tokio = { version = "1.18", features = ["full"] }

# IPC
zmq = { version = "0.9", features = ["vendored"] }

# GRPC
prost = "0.10"
tonic = "0.7"

# Build dependencies are used to in build.rs to generate the shell
# auto-complete files under the /shell folder.
[build-dependencies]
amplify = "3"
amplify_derive = "2"
anyhow = "1"
bitcoin = "0.28"
clap = { version = "3", features = ["env"] }
clap_complete = "3.1"
configure_me_codegen = "0.4"
electrum-client = "0.10"
farcaster_core = { git = "https://github.com/farcaster-project/farcaster-core", branch = "main", features = ["serde"] }
internet2 = "0.6"
lazy_static = "1.4"
lightning_encoding = "0.7"
lnp-core = "0.6"
lnpbp = { version = "0.7", features = ["all"] }
log = { version = "0.4", features = ["max_level_trace", "release_max_level_debug"] }
microservices = { version = "0.6", default-features = false, features = ['peer'] }
monero = "0.16"
serde_yaml = { version = "0.8", optional = true }
shellexpand = "2"
strict_encoding = "1.8"
strict_encoding_derive = "1.7"
toml = { version = "0.5", optional = true }
tonic-build = "0.7"

[dev-dependencies]
futures = "0.3"
ntest = "0.7"
paste = "1.0"
rand = "0.8"
regex = "1.5"
strip-ansi-escapes = "0.1"
sysinfo = "0.18"

# Recommended set of features:
# 1. Standalone node: `server` (=`node`+`shell`)
# 2. Cli to remote node: `cli` (auto includes `shell` and `integration`)
# 3. Mobile app talking to a server: `client`
# 4. Mobile app with embedded node: `embedded` (auto includes `client` + `node`)
# 5. Simple cli utility app: `shell`
[features]
default = ["server", "cli"]
all = ["server", "cli", "serde", "tor"]

# Server is a standalone application that runs daemon
server = ["node", "shell", "microservices/server", "nix"]
# Command-line application feature
cli = ["shell", "client", "serde", "microservices/cli"]

# Embedded is an app that contains embedded node and that talks to it through
# integration layer
embedded = ["client", "node", "microservices/embedded"]
# Server node can be run as a part of mobile app and other types of clients;
# thus `server` != `node`.
# This feature results in building with features not required for command-line
node = [
  "serde",
  "internet2/keygen",
  "bitcoin/rand",
  "internet2/zmq",
  "microservices/node",
  "internet2/url",
  # Required for storing config and cache
  "_config",
  "_rpc",
]
# Feature is required for any applications that talks to daemon processes
client = [
  "internet2/zmq",
  "microservices/client",
  "microservices/node",
  "bitcoin/rand",
  "internet2/url",
  "clap",
  "_rpc",
]
# Required for all apps that can be launched from command-line shell as binaries
# (i.e. both servers and cli)
shell = [
  "clap",
  "settings",
  "configure_me",
  "serde",
  "amplify/parse_arg",
  "microservices/shell",
  "shellexpand",
  "colored",
]

# Internally used features for convenience
_config = ["serde_yaml", "toml"]
_rpc = []

serde = [
  "serde_crate",
  "serde_with",
  "serde_yaml",
  "serde_json",
  "toml",
  "bitcoin/use-serde",
  "amplify/serde",
  "internet2/serde",
  "microservices/serde",
  "lnpbp/serde",
  "lnp-core/serde",
]
tor = ["microservices/tor", "internet2/tor"]

integration_test = []

[package.metadata.configure_me]
spec = "config_spec.toml"
